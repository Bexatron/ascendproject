---
layout: post
title:  "Tutorial"
date:   2014-09-18
categories: carmen
---

Our Week Two goals for Ascend include writing an instructive guide to help new contributors on their journey through Open Source learning.

Because Open Source is open, there's so much to learn, and there are so many resources to help people learn.  During Ascend, we've all been choosing topics to turn into teaching moments.  These tutorials will be readily available for anyone who is starting fresh or who wants a refresher.

As part of my own learning process, I am going to learn how to embed images into a blog post using Markdown format.  Screenshots are great for visual learners.

I pondered for quite some time about possible topics for my tutorial, and it's become clear to me that modern technology allows teams of people to work on the same projects and contribute to each other's work.

My tutorial will focus on how one person can use the Git interface to contribute their own independent work to an entire team's main project.  It will be at the basic level, because I am still learning things, but I hope it helps.

The first step to using Git to contribute to your team is to understand some vocabulary!

What is Git?  Here's a picture directly from the source, git-scm.com :

![alt text](_images/git_scm_site.png)

![alt text](_images/git_explanation.png)

Programmers (and people who use computers) make changes to files all the time.  When people work together, they're all making changes to files, and then those files will be combined into the team's project.  Git is a system designed to help people be more aware of how each team member changes the files.

"Version control" means tracking the changes made to a file or set of files over time.

It's important for programmers to be able to keep track of which version of a program they're using, what the features or files looked like in older versions, and making sure the proper changes are added to newer versions.

We call this "version control" because the Git system helps to ensure accuracy when making changes to files, and we can also reverse any unwanted changes by using the right techniques in Git.

People who use Git to track changes to files can store their team projects and their own independent work on a resource website called GitHub.

Here's a picture from https://github.com